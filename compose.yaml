version: '3'
services:
  redis:
    image: "redislabs/redismod"
    ports:
      - "6379:6379"
    networks:
      - webnet

  web1:
    restart: on-failure
    build: ./web
    hostname: web1
    ports:
      - "81:5000"
    networks:
      - webnet

  web2:
    restart: on-failure
    build: ./web
    hostname: web2
    ports:
      - "82:5000"
    networks:
      - webnet

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web1
      - web2
      - certbot
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/letsencrypt # Mount SSL certs to Nginx
      - ./nginx/acme-challenge:/var/www/certbot # For Let's Encrypt challenge
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'if [ ! -f /etc/letsencrypt/live/monitoring.appline.id/fullchain.pem ]; then certbot certonly --webroot --webroot-path=/var/www/certbot --email cs@appline.id --agree-tos --no-eff-email -d monitoring.appline.id; fi && trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot -n; sleep 12h; done;'"
    volumes:
      - ./certs:/etc/letsencrypt # Mount for SSL certs storage
      - ./nginx/acme-challenge:/var/www/certbot # Mount for Let's Encrypt challenge
    networks:
      - webnet

networks:
  webnet:
    driver: bridge
